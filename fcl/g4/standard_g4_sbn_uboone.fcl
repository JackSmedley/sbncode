#include "services_microboone.fcl"
#include "seedservice_microboone.fcl"
#include "microboone_eventweight_service.fcl"
#include "eventweight_proposal_sbn_A.fcl"
#include "eventweight_proposal_sbn_B.fcl"
#include "standard_g4_uboone.fcl"

process_name: G4

outputs.out1.fileName: "%ifb_%tc_g4.root"

services.TimeTracker: {}
services.MemoryTracker: {}
services.RandomNumberGenerator: {}
services.FileCatalogMetadata: @local::art_file_catalog_mc
services.NuRandomService: @local::microboone_seedservice
services.UBEventWeight: @local::microboone_eventweight_service

physics.producers.fluxeventweightA: @local::sbn_flux_eventweight_A
physics.producers.fluxeventweightMinibooneA: @local::sbn_flux_eventweight_miniboone_A
physics.producers.genieeventweightA: @local::sbn_genie_eventweight_A

physics.producers.rns: {
    module_type: "RandomNumberSaver"
    }


#services.UBEventWeight: @local::microboone_eventweight_service 
physics.simulate: [rns, @sequence::physics.simulate]
physics.producers.largeant.KeepParticlesInVolumes: [ "volDetEnclosure" ]

physics.producers.largeant.KeepEMShowerDaughters: false


#physics.producers.fluxeventweight: @local::sbn_flux_eventweight
#physics.producers.genieeventweight: @local::sbn_genie_eventweight
#services.UBEventWeight: @local::microboone_eventweight_service
#physics.simulate: [ @sequence::physics.simulate]

#physics.producers.largeant.KeepEMShowerDaughters: false  

